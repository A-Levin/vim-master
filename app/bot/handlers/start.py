"""Start command handler for VimMaster bot."""

import logging
from typing import Any

from aiogram import Router, html
from aiogram.filters import Command, CommandStart
from aiogram.types import Message

from app.bot.keyboards.main import get_main_keyboard

logger = logging.getLogger(__name__)

router = Router()


@router.message(CommandStart())
async def start_handler(message: Message, **kwargs: Any) -> None:
    """
    Handle /start command.
    
    This handler is called when user first starts the bot or sends /start.
    It shows welcome message and main menu.
    """
    user = message.from_user
    if not user:
        return

    logger.info(f"User {user.id} ({user.username}) started the bot")

    welcome_text = f"""üéÆ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VimMaster!</b>

–ü—Ä–∏–≤–µ—Ç, {html.bold(user.first_name)}! üëã

VimMaster ‚Äî —ç—Ç–æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è Vim —á–µ—Ä–µ–∑ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∫–≤–µ—Å—Ç—ã. 

<b>–ß—Ç–æ —Ç–µ–±—è –∂–¥–µ—Ç:</b>
‚Ä¢ üìö –ò–∑—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ Vim –æ—Ç –±–∞–∑–æ–≤—ã—Ö –¥–æ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö
‚Ä¢ üéØ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∫–≤–µ—Å—Ç—ã –∏ –∑–∞–¥–∞–Ω–∏—è
‚Ä¢ üèÜ –°–∏—Å—Ç–µ–º–∞ –æ—á–∫–æ–≤ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
‚Ä¢ üìà –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞

<b>–ù–∞—á–Ω–∏ —Å–≤–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤ –º–∏—Ä Vim –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!</b>

–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ:"""

    await message.answer(
        welcome_text,
        reply_markup=get_main_keyboard(),
        parse_mode="HTML",
    )


@router.message(Command("help"))
async def help_handler(message: Message) -> None:
    """Handle /help command."""
    help_text = """üìñ <b>–ü–æ–º–æ—â—å –ø–æ VimMaster</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ù–∞—á–∞—Ç—å –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
/profile - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å
/quest - –ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –∫–≤–µ—Å—Ç
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

<b>–ö–∞–∫ –∏–≥—Ä–∞—Ç—å:</b>
1. –ù–∞—á–Ω–∏—Ç–µ —Å –ø—Ä–æ—Å—Ç—ã—Ö –∫–≤–µ—Å—Ç–æ–≤ –≤ —Ä–∞–∑–¥–µ–ª–µ "üéØ –ö–≤–µ—Å—Ç—ã"
2. –í—ã–ø–æ–ª–Ω—è–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è, –≤–≤–æ–¥—è Vim –∫–æ–º–∞–Ω–¥—ã
3. –ü–æ–ª—É—á–∞–π—Ç–µ –æ—á–∫–∏ –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
4. –û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –Ω–æ–≤—ã–µ —É—Ä–æ–≤–Ω–∏ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è

<b>–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</b>
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –≤ –∫–≤–µ—Å—Ç–∞—Ö
‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–ø—Ä–∞–≤–∫–µ Vim: :help –∫–æ–º–∞–Ω–¥–∞
‚Ä¢ –ò–∑—É—á–∞–π—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "üìö –û–±—É—á–µ–Ω–∏–µ"

<b>–£–¥–∞—á–∏ –≤ –∏–∑—É—á–µ–Ω–∏–∏ Vim! üöÄ</b>"""

    await message.answer(help_text, parse_mode="HTML")


@router.message(Command("profile"))
async def profile_handler(message: Message) -> None:
    """Handle /profile command."""
    user = message.from_user
    if not user:
        return

    # TODO: Get user data from database
    profile_text = f"""üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞</b>

<b>–ò–º—è:</b> {html.bold(user.first_name or "–ù–µ —É–∫–∞–∑–∞–Ω–æ")}
<b>Username:</b> @{user.username or "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"}
<b>ID:</b> <code>{user.id}</code>

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –£—Ä–æ–≤–µ–Ω—å: 1
‚Ä¢ –û—á–∫–∏: 0
‚Ä¢ –ö–≤–µ—Å—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: 0
‚Ä¢ –î–Ω–µ–π –ø–æ–¥—Ä—è–¥: 0

üèÜ <b>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:</b>
–ü–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π

<i>–ù–∞—á–Ω–∏—Ç–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –∫–≤–µ—Å—Ç—ã, —á—Ç–æ–±—ã —É–ª—É—á—à–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É!</i>"""

    await message.answer(profile_text, parse_mode="HTML")