[project]
name = "vim-master"
version = "0.1.0"
description = "Educational Telegram game for learning Vim commands through interactive quests and Mini App"
authors = [
    { name = "Abdullah", email = "abdullahlevin@gmail.com" }
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "aiogram>=3.15.0",
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "sqlalchemy[asyncio]>=2.0.36",
    "alembic>=1.14.0",
    "asyncpg>=0.29.0",
    "redis[hiredis]>=5.2.0",
    "pydantic[email]>=2.10.0",
    "pydantic-settings>=2.6.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.17",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.24.0",
    "pytest-mock>=3.14.0",
    "httpx>=0.28.1",
    "black>=24.10.0",
    "isort>=5.13.2",
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "pre-commit>=4.0.1",
]
test = [
    "pytest-cov>=6.0.0",
    "factory-boy>=3.3.1",
    "faker>=33.1.0",
]

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.24.0",
    "pytest-mock>=3.14.0",
    "httpx>=0.28.1",
    "black>=24.10.0",
    "isort>=5.13.2",
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "pre-commit>=4.0.1",
    "pytest-cov>=6.0.0",
    "factory-boy>=3.3.1",
    "faker>=33.1.0",
    "aiosqlite>=0.20.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "SIM", # flake8-simplify
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",  # line-too-long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["app/tests"]
asyncio_mode = "auto"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: marks tests as unit tests (fast, no external dependencies)",
    "integration: marks tests as integration tests (slower, with external dependencies)",
    "slow: marks tests as slow running"
]

[tool.coverage.run]
source = ["app"]
omit = [
    "app/tests/*",
    "*/migrations/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
