version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: vim_master_postgres
    environment:
      POSTGRES_DB: vim_master_db
      POSTGRES_USER: vim_master
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vim_master -d vim_master_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: vim_master_redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # FastAPI Application
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    container_name: vim_master_api
    environment:
      - DATABASE_URL=postgresql+asyncpg://vim_master:password@postgres:5432/vim_master_db
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=true
      - API_HOST=0.0.0.0
      - API_PORT=8000
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
      - ./alembic:/alembic
      - ./alembic.ini:/alembic.ini
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - full

  # Telegram Bot
  bot:
    build:
      context: .
      dockerfile: docker/Dockerfile.bot
    container_name: vim_master_bot
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - DATABASE_URL=postgresql+asyncpg://vim_master:password@postgres:5432/vim_master_db
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=true
    volumes:
      - ./app:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - full

  # Development - All in one
  dev:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    container_name: vim_master_dev
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:-dummy_token}
      - DATABASE_URL=postgresql+asyncpg://vim_master:password@postgres:5432/vim_master_db
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=true
      - API_HOST=0.0.0.0
      - API_PORT=8000
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - /app/.venv  # Исключить виртуальное окружение
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - dev

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: vim_master_network